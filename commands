############################ oracle #####################################

############## 表空间 ############
select * from dba_tablespaces;
-- 所有数据文件
select * from dba_data_files;

-- 查看表空间使用情况 1
SELECT a.tablespace_name,
       a.bytes total,
       b.bytes used,
       c.bytes free,
       (b.bytes * 100) / a.bytes "% USED ",
       (c.bytes * 100) / a.bytes "% FREE "
  FROM sys.sm$ts_avail a, sys.sm$ts_used b, sys.sm$ts_free c
 WHERE a.tablespace_name = b.tablespace_name
   AND a.tablespace_name = c.tablespace_name;

-- 查看表空间使用情况 2
SELECT a.tablespace_name "表空间名",
       total "表空间大小",
       free "表空间剩余大小",
       (total - free) "表空间使用大小",
       total / (1024 * 1024 * 1024) "表空间大小(G)",
       free / (1024 * 1024 * 1024) "表空间剩余大小(G)",
       (total - free) / (1024 * 1024 * 1024) "表空间使用大小(G)",
       round((total - free) / total, 4) * 100 "使用率 %"
  FROM (SELECT tablespace_name, SUM(bytes) free
          FROM dba_free_space
         GROUP BY tablespace_name) a,
       (SELECT tablespace_name, SUM(bytes) total
          FROM dba_data_files
         GROUP BY tablespace_name) b
 WHERE a.tablespace_name = b.tablespace_name


##oracle##批量插入sql

INSERT ALL
    INTO tablea (id,b,c) VALUES (tablea_seq.nextval,1,2)
    INTO tablea (id,b,c) VALUES (tablea_seq.nextval,3,4)
    INTO tablea (id,b,c) VALUES (tablea_seq.nextval,5,6)
SELECT 1 FROM dual;

insert into tablea (id,b,c)
 ( select tablea_seq.nextval,1,2 from dual union all
   select tablea_seq.nextval,3,4 from dual union all
   select tablea_seq.nextval,3,4 from dual union all
   select tablea_seq.nextval,3,4 from dual union all
   ...
 )

//mysql 导出表结构和数据到文件

https://dev.mysql.com/doc/refman/5.6/en/batch-mode.html

drds_jdsc_bms <t.sql>./csv.sql


5、数据导出

mysqldump -h${DRDS_IP_ADDRESS} -P${DRDS_PORT} -u${user} -p${password} --set-gtid-purged=OFF --skip-opt --databases ${DRDS_DBNAME}  --tables ${TABLE_NAME}|sed ‘\/\*.*\/;$/d’  >${FILE_PATH}
记得mysql 批量插入数据

demo:
-- mysqldump --default-character-set=utf8  -h10.3.135.5 -udrds_jdsc_bms_ro -pDrds2017 --set-gtid-purged=OFF --skip-opt --databases drds_jdsc_bms --tables t_bms_lt_scheduling --where="ORG_CODE = '31112105' AND SCHEDULING_BEGIN_TIME = '2018-02-12' AND SCHEDULING_END_TIME = '2018-02-18'" -tc --quick|sed '/\/\*.*\/;$/d'   >./drds_jdsc_bms_tables_20180222_01.sql
-- mysqldump --default-character-set=utf8  -h10.3.135.5 -udrds_jdsc_bms_ro -pDrds2017 --set-gtid-purged=OFF --skip-opt --databases drds_jdsc_bms --tables t_bms_lt_scheduling_detail --where="ORG_CODE = '31112105' AND scheduling_id = '1517843'" -tc --quick|sed '/\/\*.*\/;$/d'   >./drds_jdsc_bms_tables_20180222_02.sql
-- mysqldump --default-character-set=utf8  -h10.3.135.5 -udrds_jdsc_bms_ro -pDrds2017 --set-gtid-purged=OFF --skip-opt --databases drds_jdsc_bms --tables t_bms_lt_scheduling_person --where="ORG_CODE = '31112105' AND OFFICE_TIME >= '2018-02-12' AND OFFICE_TIME <= '2018-02-18'" -tc --quick|sed '/\/\*.*\/;$/d'   >./drds_jdsc_bms_tables_20180222_03.sql
-- mysqldump --default-character-set=utf8  -h10.3.135.5 -udrds_jdsc_bms_ro -pDrds2017 --set-gtid-purged=OFF --skip-opt --databases drds_jdsc_bms --tables t_bms_lt_scheduling t_bms_lt_scheduling_person t_bms_lt_scheduling_detail -t |sed '\/\*.*\/;$/d'   >>./drds_jdsc_bms_tables_20171226.sql


执行脚本：
shell> mysql < batch-file
If you are running mysql under Windows and have some special characters in the file that cause problems, you can do this:

C:\> mysql -e "source batch-file"
If you need to specify connection parameters on the command line, the command might look like this:


shell> mysql -h host -u user -p < batch-file
Enter password: ********

shell> mysql < batch-file > mysql.out

If you want to get the interactive output format in batch mode, use mysql -t. To echo to the output the statements that are executed, use mysql -v.

You can also use scripts from the mysql prompt by using the source command or \. command:


mysql> source filename;
mysql> \. filename



//给特定的IP用户授权

mysql> show grants for 'gxwx'@'%';

mysql> grant all on weixin3.* to 'gxwx'@'211.138.242.162' identified by "gxwx_sc0771";

mysql> show grants for 'gxwx'@'211.138.242.162';





################自定义路由表，同时上内外网
route delete 0.0.0.0
route add -p 0.0.0.0 mask 0.0.0.0 192.169.23.254
route add -p 100.4.0.0 mask 255.255.0.0 100.4.254.254
route add -p 192.168.0.0 mask 255.255.0.0 100.4.254.254

route add 192.168.206.0 mask 255.255.255.0 100.4.255.254
route add 192.168.207.0 mask 255.255.255.0 100.4.255.254
route add 192.168.201.0 mask 255.255.255.0 100.4.255.254
route add 192.168.202.0 mask 255.255.255.0 100.4.255.254
route add 0.0.0.0 mask 0.0.0.0 192.169.23.254
rem route add 0.0.0.0 mask 0.0.0.0 172.16.1.1
pause




INSERT INTO tbl_name (a,b,c) VALUES(1,2,3),(4,5,6),(7,8,9),……;



http://www.oracle.com/technetwork/database/enterprise-edition/downloads/index.html
li5220008@163.com
Li*************

https://m.gtafe.com
http://gdufs.gzedu.com

1、create tablespace banks datafile 'D:\oracle\datafile\BANKS.DBF' size 500M autoextend on;
2、create user banks identified by 666666 default tablespace banks;
3、grant connect,resource to banks;

4、删除用户,包括旗下所有的设备
drop user bank cascade;


 11G中有个新特性，当表无数据时，不分配segment，以节省空间
 //查询默认值True	
 show parameter deferred_segment_creation 
 //修改默认false	
 alter system set deferred_segment_creation=false; 

exp myname/mypassword@192.168.100.152/orcl file = d:\my.dmp  
--将数据库完全导出  
exp myname/mypassword@192.168.100.152/orcl file = d:\my.dmp full = y  
--只导出用户myuser下的表  
exp myname/mypassword@192.168.100.152/orcl file = d:\my.dmp owner = (myuser) 

--exp bank/666666@192.168.101.101/orcl file = D:\oracle\databak\bank20141029.dmp owner = (bank) 
--只导出test1、test2表  
exp myname/mypassword@192.168.100.152/orcl file = d:\my.dmp tables=(test1,test2)
--全部导入  
imp myname/mypassword@192.168.100.152/orcl file = d:\my.dmp full = y  
--全部导入，忽略已存在数据  
imp myname/mypassword@192.168.100.152/orcl file = d:\my.dmp full = y ignore=y
--imp banks/666666@192.168.101.101/orcl file=D:\oracle\databak\20141108.dmp touser=banks full=y ignore=y

--只导入test1 test2表  
imp myname/mypassword@192.168.100.152/orcl file  = d:\my.dmp tables=(test1,test2)  

--查看用户下的所有表
	SELECT table_name
	FROM user_tables

	tabs
	dba_tables
	all_tables
	user_tables
--查看所有用户
select username from dba_users;

https://192.168.101.101:1158/em/console

########################### Fedora release 19 
https://192.168.101.101:1158/em/console
SYS 
******
########################## windows 

解决Windows Server 2003不认U盘或移动硬盘的问题
1、进入命令提示符环境(也就是DOS) 
2、进入DISKPART程序 
3、输入AUTOMOUNT ENABLE指令 
4、OK，
下次USB硬盘接入后就可以像XP 一样自动装载了。


//vpn
107.182.177.168
138.128.192.120
pptp
vivian


//杂项命令
	disconn
	conn bank/bank
	set linesize 300	
//监听配置文件路径：
C:\app\Administrator\product\11.2.0\dbhome_1\NETWORK\ADMIN
//用户管理
	//oracle数据库的三种验证机制
	1、操作系统验证
	2、密码文件验证
	3、数据库验证

//linux下oracle启动过程
	lsnrctl start//启动监听
	/11g+
	sqlplus sys/666666 as sysdba (1、2)//早起的版本不支持
	/早期版本
	sqlplus /nolog
	conn sys/666666 as sysdba
	startup //启动oracle实例
	/普通用户登录
	sqlplus scott/tiger
//windows下oracle启动过程
	lsnrctl start
	oradim -starup -sid orcl
	


	//超级用户登陆
	sqlplus / as sysdba
	
	//修改用户密码(会覆盖原来的密码)
	alter user scott identified by tiger
	//更改超级管理员（特权 sysdba,sysoper）用户口令文件
	orapwd file=C:\app\Administrator\product\11.2.0\dbhome_1\database\PWDorcl.ora password=666666 entries=10
	//查看密码文件里面放了多少特权用户
	select * from v$pwfile_users;

//创建用户
create user banks
identified by banks
default tablespace Users 
Temporary Tablespace Temp
Quota 50M on users //(Quota unlimited on users)限制用户表空间的大小


alter user banks
identified by banks
default tablespace Users 
Temporary Tablespace Temp
Quota 50M on users

	//用户加锁 alter User 用户名 Account Lock
	//用户解锁 alter User 用户名 Account Unlock
	用户口令即刻失效
	alter User 用户名 Password Expire

	/dos下写出到文本文件
	eq
	
//操作表空间
一、drop user xxxx cascade;
二、drop tablespace xxxx including contents and datafiles
1.首先看一下是不是已经使用了OMF
sql>show parameter db_create
查看参数db_create_file_dest,如果已经设置
则:drop tablespace tablespacename 就可以直接删除表空间以及相应的数据文件
2.如果没使用OMF,则：
drop tablespace tablespacename including contents and datafiles

1、先查询空闲空间

select tablespace_name,file_id,block_id,bytes,blocks from dba_free_space; 
2、增加Oracle表空间

先查询数据文件名称、大小和路径的信息，语句如下：

select tablespace_name,file_id,bytes,file_name from dba_data_files; 
3、修改文件大小语句如下

alter database datafile   
'需要增加的数据文件路径，即上面查询出来的路径  
'resize 800M; 
4、创建Oracle表空间

create tablespace test  
datafile '/home/app/oracle/oradata/oracle8i/test01.dbf' size 8M  
autoextend on  
next 5M  
maxsize 10M;  
 
create tablespace sales  
datafile '/home/app/oracle/oradata/oracle8i/sales01.dbf' size 800M  
autoextend on  
next 50M  
maxsize unlimited  
maxsize unlimited 是大小不受限制  
 
create tablespace sales  
datafile '/home/app/oracle/oradata/oracle8i/sales01.dbf' size 800M  
autoextend on  
next 50M  
maxsize 1000M  
extent management local uniform;  
unform表示区的大小相同，默认为1M  
 
create tablespace sales  
datafile '/home/app/oracle/oradata/oracle8i/sales01.dbf' size 800M  
autoextend on  
next 50M  
maxsize 1000M  
extent management local uniform size 500K;  
unform size 500K表示区的大小相同，为500K  
 
create tablespace sales  
datafile '/home/app/oracle/oradata/oracle8i/sales01.dbf' size 800M  
autoextend on  
next 50M  
maxsize 1000M  
extent management local autoallocate;  
autoallocate表示区的大小由随表的大小自动动态改变，大表使用大区小表使用小区  
 
create tablespace sales  
datafile '/home/app/oracle/oradata/oracle8i/sales01.dbf' size 800M  
autoextend on  
next 50M  
maxsize 1000M  
temporary;  
temporary创建字典管理临时表空间  
 
create temporary tablespace sales  
tempfile '/home/app/oracle/oradata/oracle8i/sales01.dbf' size 800M  
autoextend on  
next 50M  
maxsize 1000M  
创建本地管理临时表空间，如果是临时表空间，所有语句中的datafile都换为tempfile  
 
8i系统默认创建字典管理临时表空间，要创建本地管理临时表空间要加temporary tablespace关键字  
创建本地管理临时表空间时，不得使用atuoallocate参数，系统默认创建uniform管理方式  
 
为表空间增加数据文件：  
alter tablespace sales add  
datafile '/home/app/oracle/oradata/oracle8i/sales02.dbf' size 800M  
autoextend on next 50M  
maxsize 1000M; 
创建本地管理临时Oracle表空间，如果是临时表空间，所有语句中的datafile都换为tempfile8i系统默认创建字典管理临时表空间，要创建本地管理临时表空间要加temporary tablespace关键字创建本地管理临时表空间时，不得使用atuoallocate参数，系统默认创建uniform管理方式

为表空间增加数据文件：

alter tablespace sales add  
datafile '/home/app/oracle/oradata/oracle8i/sales02.dbf' size 800M  
autoextend on next 50M  
maxsize 1000M; 
5、更改自动扩展属性：

alter database datafile  
'/home/app/oracle/oradata/oracle8i/sales01.dbf',  
'/home/app/oracle/oradata/oracle8i/sales02.dbf'  
'/home/app/oracle/oradata/oracle8i/sales01.dbf  
autoextend off; 
	
	
//三个默认的用户

	sys change_oninstall [as sysdba]
	system manager
	scott tiger

//创建用户
	create user bank identified by 666666;
//系统权限
	//赋予创建session回话权限 （登陆）
	grant create session to bank;
	//建表权限(包括增删改查/ 对于对象权限，谁拥有谁授权)
	grant create table to bank;
	//授予表空间的权限
	grant unlimited tablespase to bank;

	//撤销权限
	revoke create session from bank;
	revoke create table from bank;
	revoke unlimited tablespase from bank;

//对象权限
	//赋予对象权限
	grant select on mytab to bank;
	grant all on mytab to bank;
	//撤销权限
	revoke select on mytab from bank;
	revoke all on mytab from bank;
	//可以控制到列
	grant update(name) on mytab to list;
	grant insert(id) on mytab to list; 
	注意查询和删除不能控制到列
	//查询列权限
	select * from user_col_privs;
	
//查看用户下面拥有哪些系统权限、
	select * from user_sys_privs;	

//查看用户下面拥有哪些对象权限、
	select * from user_tab_privs;

//授予public权限
	grant create any table to public;

ddl 数据定义语言
dml 数据操作语言 //需要commit
dcl 数据授权

权限具有传递性
	grant alter any table to lisi with admin;
	grant alter any table to lisi with grant;
角色权限
	//创建
	create role myrole;
	//授权
	grant create session to myrole;
	grant create table to myrole;
	//把角色授权给用户
	gtant myrole to bank;
	
	
/** 表被锁住 **/
Oracle数据库操作中，我们有时会用到锁表查询以及解锁和kill进程等操作，那么这些操作是怎么实现的呢？本文我们主要就介绍一下这部分内容。
(1)锁表查询的代码有以下的形式：
select count(*) from v$locked_object;
select * from v$locked_object;
(2)查看哪个表被锁
select b.owner,b.object_name,a.session_id,a.locked_mode from v$locked_object a,dba_objects b where b.object_id = a.object_id;
(3)查看是哪个session引起的
select b.username,b.sid,b.serial#,logon_time from v$locked_object a,v$session b where a.session_id = b.sid order by b.logon_time; 
(4)杀掉对应进程
执行命令：alter system kill session'1025,41';
其中1025为sid,41为serial#.

/****  oracle 无法删除当前已连接的用户 **/

1、查看当前连接状况

SQL> select username,sid,serial# from v$session;
 USERNAME                              SID    SERIAL#
------------------------------ ---------- ----------
SYS                                   136        530
SYS                                   137        328
SYSMAN                                138         12
UTEST                                 139       1098
2、找到要删除的用户的SID和SERIAL#对应的值执行如下语句

如要删除的用户为UTEST，则执行以下SQL
SQL> alter system kill session '139,1098';	




############################ sybase #####################################


#登陆数据库
isql -U aaa -P aaa -H 192.168.100.54:4205 -D staticdb -S bjtxsyb

#打开GUI配置窗口
asecfg

#############修改 sybase 存储过程的transaction mode
sp_procxmode procedure_name, "Unchained"
sp_procxmode procedure_name, "anymode"

## sybase 新建数据库

[sybase]$ isql -Usa  
Password: <sa-password>  
1> disk init name='jbpmdata', physname='/var/lib/sybase/jbpmdata.dat', size='32m'  
2> go  
1> disk init name='jbpmlog', physname='/var/lib/sybase/jbpmlog.dat', size='32m'  
2> go  
1> create database jbpm3 on jbpmdata='32m' log on jbpmlog='32m'  
2> go  
1> sp_dboption jbpm3, "trunc log on chkpt", true  
2> go  
1> sp_dboption jbpm3, "abort tran on log full", true  
2> go  


## sybase 创建数据库	 	

     use master
	drop database bank
	go
	sp_dropdevice bank
	go
	sp_dropdevice banklog
	go
	disk init name='bank', physname='D:\sybase_devices\bank.dat', size='500m'  
	go  
	disk init name='banklog', physname='D:\sybase_devices\banklog.dat', size='500m'  
	go  
	create database bank on bank='500m' log on banklog='500m'  
	go  
	sp_dboption bank, "trunc log on chkpt", true  
	go  
	sp_dboption bank, "abort tran on log full", true  
	go  	


## sybase 备份数据库
     use master
      
     go
     
     dump database bank to 'C:\sybasebak\20140903.dump'  
     
     go
     
     load database bank from 'C:\sybasebak\20140903.dump'
     
     go
     
     online database bank
     
     go
     
     sp_help


##修改数据库设备大小
use master
    go
    disk resize
    name = 'bank',
    size = '30m'
    go
    sp_helpdevice bank


ddlgen的其他用法:
1、存储过程
ddlgen -Usa -P666666 -SGTA101134 -Dbank -TP -N% -O C:\sybasebak\db\proc.ddl -Jutf8
2、数据库
ddlgen -Usa -P666666 -SGTA101134 -Dbank -TDB -Nbank -O C:\sybasebak\db\db.ddl -Jutf8
3、表结构
ddlgen -Usa -P666666 -SGTA101134 -Dbank -TU -N% -O C:\sybasebak\db\table.ddl -Jutf8
4、视图
ddlgen -Usa -P666666 -SGTA101134 -Dbank -TV -N% -O C:\sybasebak\db\view.ddl -Jutf8




########################## linux ########################################

netstat -tlnp

### 查看文件命令
# ls -l
total 30372
-rw-r--r-- 1 root root 31051909 May 24 10:07 cuss.war
-rw------- 1 root root 0 Mar 20 13:52 nohup.out
# ls -lh
total 30M
-rw-r--r-- 1 root root 30M May 24 10:07 cuss.war
-rw------- 1 root root 0 Mar 20 13:52 nohup.out
# ll -h
total 30M
-rw-r--r-- 1 root root 30M May 24 10:07 cuss.war
-rw------- 1 root root 0 Mar 20 13:52 nohup.out
[root@localhost rice_f2]# ls -lhs


## fcitx -r enable fcitx-qimpanel &

export XMODIFIERS="@im=fcitx"
export XIM=fcitx
export XIM_PROGRAM=fcitx
export GTK_IM_MODULE=fcitx
export QT_IM_MODULE=fcitx
fcitx &
fcitx-qimpanel &

#fedora logout
>sudo pkill -kill -t tty1 

>sudo tar zxvf data.tar.xz -C /

####clear tmp

tmpwatch -afq --mtime 1 /tmp

## report file system disk space usage

df -h

############## chrome
cat << EOF > /etc/yum.repos.d/google-chrome.repo
[google-chrome]
name=google-chrome - \$basearch
baseurl=http://dl.google.com/linux/chrome/rpm/stable/\$basearch
enabled=1
gpgcheck=1
gpgkey=https://dl-ssl.google.com/linux/linux_signing_key.pub
EOF

yum install google-chrome-stable


sudo yum-config-manager --add-repo=http://repos.fedorapeople.org/repos/spot/chromium-stable/fedora-chromium-stable.repo

sudo yum install chromium -y

sudo yum-config-manager --add-repo=http://repos.fedorapeople.org/repos/spot/chromium-unstable/fedora-chromium.repo

############## Creating a Swap File
To add a swap file:
Determine the size of the new swap file in megabytes and multiply by 1024 to determine the number of blocks. For example, the block size of a 64 MB swap file is 65536.
At a shell prompt as root, type the following command with count being equal to the desired block size:
dd if=/dev/zero of=/swapfile bs=1024 count=65536
Setup the swap file with the command:
mkswap /swapfile
To enable the swap file immediately but not automatically at boot time:
swapon /swapfile
To enable it at boot time, edit /etc/fstab to include the following entry:
/swapfile swap swap defaults 0 0
The next time the system boots, it enables the new swap file.
To test if the new swap file was successfully created, use cat /proc/swaps or free to inspect the swap space.



######################### windows #######################
############ dos 查看端口占情况
netstat  -aon|findstr  "8080"

tasklist | findstr “3728”

tskill ####

taskkill /f /pid 3728


ipconfig /all                ------ 查询本机IP段，所在域等 
net user                     ------ 本机用户列表 
net localhroup administrators       ------ 本机管理员[通常含有域用户] 
net user /domain                        ------ 查询域用户 
net group /domain                      ------ 查询域里面的工作组
net group "domain admins" /domain       ------ 查询域管理员用户组 
net localgroup administrators /domain    ------ 登录本机的域管理员
net localgroup administrators workgroup\user001 /add   ------域用户添加到本机
net group "domain controllers" /domain                         ------ 查看域控制器(如果有多台) 
net time /domain          ------ 判断主域，主域服务器都做时间服务器 
net config workstation   ------ 当前登录域 
net session                  ------ 查看当前会话 
net use \\ip\ipc$ pawword /user:username      ------ 建立IPC会话[空连接-***] 
net share                    ------  查看SMB指向的路径[即共享]
net view                      ------ 查询同一域内机器列表 
net view \\ip                ------ 查询某IP共享
net view /domain         ------ 查询域列表
net view /domain:domainname        ------ 查看workgroup域中计算机列表 
net start                                         ------ 查看当前运行的服务 
net accounts                                   ------  查看本地密码策略 
net accounts /domain                      ------  查看域密码策略 
nbtstat –A ip                                   ------netbios 查询 
netstat –an/ano/anb                        ------ 网络连接查询 
route print                                      ------ 路由表
=============================================================  

dsquery computer       ----- finds computers in the directory.
dsquery contact           ----- finds contacts in thedirectory.
dsquery subnet            ----- finds subnets in thedirectory.
dsquery group             ----- finds groups in thedirectory.
dsquery ou                   ----- finds organizationalunits in the directory.
dsquery site                 ----- finds sites in thedirectory.
dsquery server             ----- finds domain controllers inthe directory.
dsquery user                ----- finds users in thedirectory.
dsquery quota              ----- finds quota specificationsin the directory.
dsquery partition         ----- finds partitions in thedirectory.
dsquery *                     ----- finds any object inthe directory by using a generic LDAP query.
dsquery server –domain Yahoo.com | dsget server–dnsname –site ---搜索域内域控制器的DNS主机名和站点名
dsquery computer domainroot –name *-xp –limit 10----- 搜索域内以-xp结尾的机器10台
dsquery user domainroot –name admin* -limit ---- 搜索域内以admin开头的用户10个
……
……
[注:dsquery来源于Windows Server 2003 Administration Tools Pack]
=============================================================    

tasklist /V                                                      ----- 查看进程[显示对应用户]
tasklist /S ip /U domain\username /P /V             ----- 查看远程计算机进程列表
qprocess *                                                    ----- 类似tasklist
qprocess /SERVER:IP                                      ----- 远程查看计算机进程列表
nslookup –qt-MX Yahoo.com                           ----- 查看邮件服务器
whoami /all                                                   ----- 查询当前用户权限等
set                                                              ----- 查看系统环境变量
systeminfo                                                    ----- 查看系统信息
qwinsta                                                        ----- 查看登录情况
qwinsta /SERVER:IP                                       ----- 查看远程登录情况
fsutil fsinfo drives                                           ----- 查看所有盘符
gpupdate /force                                            ----- 更新域策略
=============================================================   

wmic bios                                                     ----- 查看bios信息
wmic qfe                                                      ----- 查看补丁信息
wmic qfe get hotfixid                                     ----- 查看补丁-Patch号
wmic startup                                                 ----- 查看启动项
wmic service                                                 ----- 查看服务
wmic os                                                       ----- 查看OS信息
wmic process get caption,executablepath,commandline
wmic process call create “process_name” (executes a program)
wmic process where name=”process_name” call terminate (terminates program)
wmic logicaldisk where drivetype=3 get name, freespace, systemname, filesystem, size,
volumeserialnumber (hard drive information)
wmic useraccount (usernames, sid, and various security related goodies)
wmic useraccount get /ALL
wmic share get /ALL (you can use ? for gets help ! )
wmic startup list full (this can be a huge list!!!)
wmic /node:"hostname" bios get serialnumber (this can be great for finding warranty info about target)


每天运行一次                        'SYSDATE + 1'
每小时运行一次                     'SYSDATE + 1/24'
每10分钟运行一次                 'SYSDATE + 10/（60*24）'
每30秒运行一次                    'SYSDATE + 30/(60*24*60)'
每隔一星期运行一次               'SYSDATE + 7'
每个月最后一天运行一次         'TRUNC(LAST_DAY(ADD_MONTHS(SYSDATE,1))) + 23/24'
每年1月1号零时                    'TRUNC(LAST_DAY(TO_DATE(EXTRACT(YEAR FROM SYSDATE)||'12'||'01','YYYY-MM-DD'))+1)' 
每天午夜12点                       'TRUNC(SYSDATE + 1)'
每天早上8点30分                  'TRUNC(SYSDATE + 1) + (8*60+30)/(24*60)'
每星期二中午12点                 'NEXT_DAY(TRUNC(SYSDATE ), ''TUESDAY'' ) + 12/24'
每个月第一天的午夜12点        'TRUNC(LAST_DAY(SYSDATE ) + 1)'
每个月最后一天的23点           'TRUNC (LAST_DAY (SYSDATE)) + 23 / 24'
每个季度最后一天的晚上11点  'TRUNC(ADD_MONTHS(SYSDATE + 2/24, 3 ), 'Q' ) -1/24'
每星期六和日早上6点10分      'TRUNC(LEAST(NEXT_DAY(SYSDATE, ''SATURDAY"), NEXT_DAY(SYSDATE, "SUNDAY"))) + (6*60+10)/(24*60)'

例：

DECLARE
   job             BINARY_INTEGER;                                                         --任务ID
   v_begin      DATE;                                                                           --开始时间
   v_interval   VARCHAR2 (50);                                                           --时间间隔
BEGIN
   v_begin    := TRUNC (LAST_DAY (SYSDATE)) + 23 / 24;                  --<当前月份最后一天 23:00>
   v_interval := 'trunc(last_day(add_months(sysdate,1))) + 23/24'; --<下个月份最后一天 23:00>
   DBMS_JOB.submit (job,
                    'prc_ll_temp;',
                    v_begin,
                    v_interval,
                    FALSE,
                    0,
                    FALSE
                   );
   DBMS_OUTPUT.put_line ('JOB(任务)编号：' || job);
   COMMIT;
END;

